"use strict";(self.webpackChunkmy_blog=self.webpackChunkmy_blog||[]).push([[4900],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,d=u["".concat(l,".").concat(m)]||u[m]||f[m]||a;return n?r.createElement(d,i(i({ref:t},s),{},{components:n})):r.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={date:new Date("2023-05-01T00:00:00.000Z"),modified:new Date("2023-05-13T00:00:00.000Z")},i=void 0,c={unversionedId:"project/project",id:"project/project",title:"project",description:"\uc77c\ub2e8 supabase \ub97c \uc368\ubcf4\uace0 \ucd5c\uc801\ud654\uc5d0 \ub300\ud55c \uacbd\ud5d8\uc744 \ud574\uc57c\ud55c\ub2e4",source:"@site/docs/project/project.md",sourceDirName:"project",slug:"/project/",permalink:"/docs/project/",draft:!1,editUrl:"https://github.com/mineclover/my-blog/docs/project/project.md",tags:[],version:"current",frontMatter:{date:"2023-05-01T00:00:00.000Z",modified:"2023-05-13T00:00:00.000Z"},sidebar:"tutorialSidebar",previous:{title:"\ub0b4\uac00 \ud504\ub85c\uadf8\ub798\uba38\ub97c \uc120\ud0dd\ud55c \uc774\uc720",permalink:"/docs/profile/mind/Why-Chose-Programmer"},next:{title:"CICD-blog-project",permalink:"/docs/project/CICD-blog-project/"}},l={},p=[],s={toc:p},u="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\uc77c\ub2e8 supabase \ub97c \uc368\ubcf4\uace0 \ucd5c\uc801\ud654\uc5d0 \ub300\ud55c \uacbd\ud5d8\uc744 \ud574\uc57c\ud55c\ub2e4\n\uadf8\uac83\ub9cc \ud558\uace0 \uc774\ub825\uc11c \ub9cc\ub4e4\uace0\n\ubb3c\uc5b4\ubcfc \uac83\ub4e4 \ubb3c\uc5b4\ubcf4\uc790"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"\uc635\uc2dc\ub514\uc5b8 \ub370\uc774\ud130 \uc2dc\uac01\ud654\uc6a9 \ucf54\ub4dc"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-dataviewjs"},"function callout(text, type) {\n    const allText = `> [!${type}]\\n` + text;\n    const lines = allText.split('\\n');\n    return lines.join('\\n> ') + '\\n'\n}\n\nconst query = `\nnot done\npath includes ${dv.current().file.name}/\n`;\n\ndv.paragraph(callout('```tasks\\n' + query + '\\n```', 'todo'));\n")),(0,o.kt)("hr",{parentName:"admonition"}),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-dataviewjs"},"function callout(text, type) {\n    const allText = `> [!${type}]\\n` + text;\n    const lines = allText.split('\\n');\n    return lines.join('\\n> ') + '\\n'\n}\n\nconst path = dv.current().file.folder;\n\nconst query = `\nTABLE  file.frontmatter.sidebar_position AS \"\uc21c\uc11c\", file.frontmatter.aliases AS \"\ubd80\uc81c\ubaa9\", file.frontmatter.tags AS \"\ud0dc\uadf8\", file.frontmatter.title AS \"\ub300\uccb4 \uc81c\ubaa9\", file.frontmatter.slug AS \uacbd\ub85c\nFROM \"${path}\"\nSORT file.frontmatter.sidebar_position\n`;\n\ndv.paragraph(callout('```dataview\\n' + query + '\\n```', 'INDEX ORDER'));\n"))))}f.isMDXComponent=!0}}]);